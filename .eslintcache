[{"C:\\Users\\Khan Tanveer\\Desktop\\react-apps\\fyntune-todo-app\\src\\index.js":"1","C:\\Users\\Khan Tanveer\\Desktop\\react-apps\\fyntune-todo-app\\src\\App.js":"2","C:\\Users\\Khan Tanveer\\Desktop\\react-apps\\fyntune-todo-app\\src\\component\\TodoForm.js":"3","C:\\Users\\Khan Tanveer\\Desktop\\react-apps\\fyntune-todo-app\\src\\store\\store.js":"4","C:\\Users\\Khan Tanveer\\Desktop\\react-apps\\fyntune-todo-app\\src\\store\\reducer\\todoReducer.js":"5","C:\\Users\\Khan Tanveer\\Desktop\\react-apps\\fyntune-todo-app\\src\\store\\action.js":"6","C:\\Users\\Khan Tanveer\\Desktop\\react-apps\\fyntune-todo-app\\src\\component\\card.js":"7","C:\\Users\\Khan Tanveer\\Desktop\\react-apps\\fyntune-todo-app\\src\\component\\Card.js":"8","C:\\Users\\Khan Tanveer\\Desktop\\react-apps\\fyntune-todo-app\\src\\component\\ShowCard.js":"9"},{"size":221,"mtime":1612350750426,"results":"10","hashOfConfig":"11"},{"size":540,"mtime":1612678137791,"results":"12","hashOfConfig":"11"},{"size":1278,"mtime":1612677336405,"results":"13","hashOfConfig":"11"},{"size":241,"mtime":1612675807322,"results":"14","hashOfConfig":"11"},{"size":2490,"mtime":1612683964532,"results":"15","hashOfConfig":"11"},{"size":582,"mtime":1612674932559,"results":"16","hashOfConfig":"11"},{"size":2968,"mtime":1612634034589,"results":"17","hashOfConfig":"11"},{"size":4839,"mtime":1612684033804,"results":"18","hashOfConfig":"11"},{"size":3129,"mtime":1612678059869,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"q7i26f",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},"C:\\Users\\Khan Tanveer\\Desktop\\react-apps\\fyntune-todo-app\\src\\index.js",[],["41","42"],"C:\\Users\\Khan Tanveer\\Desktop\\react-apps\\fyntune-todo-app\\src\\App.js",[],"C:\\Users\\Khan Tanveer\\Desktop\\react-apps\\fyntune-todo-app\\src\\component\\TodoForm.js",[],"C:\\Users\\Khan Tanveer\\Desktop\\react-apps\\fyntune-todo-app\\src\\store\\store.js",[],"C:\\Users\\Khan Tanveer\\Desktop\\react-apps\\fyntune-todo-app\\src\\store\\reducer\\todoReducer.js",[],"C:\\Users\\Khan Tanveer\\Desktop\\react-apps\\fyntune-todo-app\\src\\store\\action.js",[],"C:\\Users\\Khan Tanveer\\Desktop\\react-apps\\fyntune-todo-app\\src\\component\\card.js",["43"],"C:\\Users\\Khan Tanveer\\Desktop\\react-apps\\fyntune-todo-app\\src\\component\\Card.js",["44","45"],"import React, { Component } from \"react\";\r\nimport { MdEdit, MdUpdate, MdDelete, MdDone } from 'react-icons/md';\r\n\r\n\r\nclass Card extends Component {\r\n  state = {\r\n    newTaskName: '',\r\n    isEditable: false\r\n  };\r\n\r\n  updateTask=(e,id)=>{\r\n    this.setState({newTaskName : e.target.value})\r\n  }\r\n\r\n  handleEdit=()=>{\r\n    this.setState({isEditable: !this.state.isEditable})\r\n  }\r\n\r\n  submitEdit=(id)=>{\r\n    console.log(this.state)\r\n    this.props.editTask(id,this.state.newTaskName);\r\n    this.setState({  newTaskName: '',\r\n    isEditable: false})\r\n  }\r\n\r\n  render() {\r\n   \r\n    const {\r\n      id,\r\n      taskName,\r\n      date,\r\n      deleteTask,\r\n      isComplete,\r\n      taskComplete,\r\n    } = this.props;\r\n    return (\r\n//       <li\r\n//         id={id}\r\n//         className=\"card\"\r\n//         style={{ backgroundColor: isComplete ? \"#2e293f\" : \"#464840\" }}\r\n//       >\r\n//         <div>\r\n//           {!this.state.isEditable ? (\r\n//             <h5\r\n//               style={{ textDecoration: !isComplete ? \"line-through\" : \"none\" }}\r\n//             >\r\n//               {taskName}\r\n//             </h5>\r\n//           ) : (\r\n//             <input onChange={this.updateTask} value={this.state.taskName} style={{ width: \"120px\" }} type=\"text\" />\r\n//           )}\r\n//           <button>\r\n//            { !this.state.isEditable ? <MdEdit onClick={ this.handleEdit}\r\n//               width=\"24px\"\r\n//               title=\"edit\"\r\n//             /> : <MdUpdate onClick={()=>{this.submitEdit(id)}}\r\n//             width=\"24px\"\r\n//             title=\"edit\"\r\n//           />\r\n//           }</button>\r\n//           <button onClick={() => { deleteTask(id)}}\r\n//           >\r\n//             <MdDelete width=\"24px\" title=\"Delete\" />\r\n//           </button>\r\n//           <button onClick={() => { taskComplete(id) }}\r\n//           >\r\n//             <MdDone\r\n//               width=\"24px\"\r\n//               title=\"task Completed\"\r\n//             />\r\n//           </button>\r\n//         </div>\r\n//         <div>\r\n//           <p>added on {date}</p>\r\n//         </div>\r\n//       </li>\r\n\r\n        \r\n        \r\n        \r\n\r\n<div className=\"todo-list\">\r\n    <div className=\"todo-cards\">\r\n        <div class=\"card\" id={id} style=\"width: 18rem;\" style={{ backgroundColor: isComplete ? \"#ffffff\" : \"#00ff48\" }}>\r\n            <div class=\"card-body\" >\r\n                <h5 class=\"card-title\">Card title</h5>\r\n                {!this.state.isEditable ? (\r\n                    <h5 style={{ textDecoration: !isComplete ? \"line-through\" : \"none\" }}>\r\n                        {taskName}\r\n                    </h5>\r\n                    ) : (\r\n                    <input onChange={this.updateTask} value={this.state.taskName}  type=\"text\" />\r\n                    )}\r\n                <h3 className=\"card-subtitle mb-2\">Added on {date} </h3>\r\n                <button type=\"button\" class=\"btn btn-primary  ml- text-center\" >\r\n                    {!this.state.isEditable ?\r\n                        <MdEdit onClick={this.handleEdit} />\r\n                        :\r\n                        <MdUpdate onClick={() => { this.submitEdit(id) }} />\r\n                        }\r\n                </button>\r\n                <button   onClick={() => { deleteTask(id) }} type=\"button\" class=\"btn btn-primary  ml- text-center\">\r\n                    <MdDelete />\r\n                </button>\r\n                <button onClick={() => { taskComplete(id) }} type=\"button\" class=\"btn btn-primary  ml- text-center\">\r\n                    <MdDone  />\r\n                </button>\r\n                \r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n        \r\n        \r\n        \r\n        \r\n        \r\n    \r\n    )\r\n  }\r\n}\r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n\r\nexport default Card;\r\n\r\n// const Card = ({id, taskName, date,deleteTask,isComplete,taskComplete,isEditable,handleEdit}) => {\r\n//     // console.log(taskName, id, date)\r\n//   return (\r\n//     <li id={id}  className=\"card\" style={{backgroundColor: isComplete ? \"#2e293f\" : \"#464840\"}}>\r\n//       <div>\r\n//         { !isEditable ? <h5 style={{ textDecoration: !isComplete ? \"line-through\" : \"none\"}}>{taskName}</h5> : <input style={{width: \"120px\"}} type=\"text\"/> }\r\n//         <button>\r\n//           <img src={edit} onClick={()=>{handleEdit(id,taskName)}} alt=\"delete-icon\" width=\"24px\" title=\"edit\" />\r\n//         </button>\r\n//         <button onClick={()=>{deleteTask(id)}}>\r\n//           <img src={deleted} alt=\"delete-icon\" width=\"24px\" title=\"Delete\" />\r\n//         </button>\r\n//         <button onClick={()=>{taskComplete(id)}}>\r\n//           <img src={taskDone} alt=\"task complete\" width=\"24px\" title=\"Delete\" />\r\n//         </button>\r\n//       </div>\r\n//       <div>\r\n//         <p>added on {date}</p>\r\n//       </div>\r\n//     </li>\r\n//   );\r\n// };\r\n\r\n// export default Card;\r\n\r\n\r\n\r\n","C:\\Users\\Khan Tanveer\\Desktop\\react-apps\\fyntune-todo-app\\src\\component\\ShowCard.js",["46"],"import React, { Component } from \"react\";\r\nimport Card from \"./Card\";\r\nimport { connect } from \"react-redux\";\r\nimport { editTask, deleteTask, taskComplete } from '../store/action'\r\nimport './ShowCard.css';\r\n\r\nclass DisplayTask extends Component {\r\n \r\n  state = {\r\n    id: 0\r\n  }\r\n \r\n  handleDelete = (id) =>{\r\n    this.props.deleteTask(id)\r\n \r\n  }\r\n\r\n  taskComplete = (id) =>{\r\n    this.props.taskComplete(id)\r\n   \r\n  }\r\n\r\n  editTask = (id,taskName) => {\r\n    this.props.editTask(id,taskName)\r\n  }\r\n\r\n  handleFilter = (id) =>{\r\n    if(id === 0){\r\n      this.setState({tasks: this.props.tasks})\r\n    }\r\n    else {\r\n      const tasks = this.props.tasks.filter((data)=>{\r\n        if(id === 1){\r\n          return data.isComplete === true\r\n        }\r\n        else if(id === 2){\r\n          return data.isComplete !== true\r\n        }\r\n      })\r\n      this.setState({tasks: tasks})\r\n    }\r\n    this.setState({id})\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.props.tasks);\r\n    // const { tasks } = this.props;\r\n\r\n    const tasks = this.props.tasks.filter((data)=>{\r\n      if(this.state.id === 1){\r\n              return data.isComplete === true\r\n            }\r\n            else if(this.state.id === 2){\r\n              return data.isComplete !== true\r\n            }\r\n            return data\r\n    })\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"show-buttons\">\r\n          <div className=\"filterList\">\r\n            <button type=\"button\" class=\"btn btn-primary  ml- text-center btn-lg\" onClick={()=>{ this.handleFilter(0)}}>All</button>\r\n            <button type=\"button\" class=\"btn btn-warning\" onClick={()=>{ this.handleFilter(1)}}>Active</button>\r\n            <button type=\"button\" class=\"btn btn-success\" onClick={()=>{ this.handleFilter(2)}}>Completed</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"list\">\r\n          <ul className=\"center\">\r\n            {tasks.length ? (\r\n              tasks.map((data) => {\r\n                return (\r\n                  <Card\r\n                    key={data.id}\r\n                    taskName={data.taskName}\r\n                    date={data.date}\r\n                    id={data.id}\r\n                    deleteTask={this.handleDelete}\r\n                    isComplete={data.isComplete}\r\n                    taskComplete={this.taskComplete}\r\n                    isEditable={data.isEditable}\r\n                    handleEdit={this.handleEdit}\r\n                    editTask={this.editTask}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <div>\r\n                <h5>no task to show</h5>\r\n              </div>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tasks: state.tasks,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteTask : (id) => dispatch(deleteTask(id)),\r\n    taskComplete: (id)=> dispatch(taskComplete(id)),\r\n    editTask: (id,newTask)=> dispatch(editTask(id,newTask))\r\n    // filterTask: (id) => dispatch(filterTask(id))\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(DisplayTask);\r\n",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":1,"column":17,"nodeType":"53","messageId":"54","endLine":1,"endColumn":25},{"ruleId":"55","severity":1,"message":"56","line":84,"column":35,"nodeType":"57","endLine":84,"endColumn":56},{"ruleId":"58","severity":1,"message":"59","line":84,"column":57,"nodeType":"57","endLine":84,"endColumn":120},{"ruleId":"60","severity":1,"message":"61","line":32,"column":51,"nodeType":"62","messageId":"63","endLine":32,"endColumn":53},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react/style-prop-object","Style prop value must be an object","JSXAttribute","react/jsx-no-duplicate-props","No duplicate props allowed","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]